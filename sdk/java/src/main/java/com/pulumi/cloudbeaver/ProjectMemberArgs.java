// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudbeaver;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ProjectMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectMemberArgs Empty = new ProjectMemberArgs();

    @Import(name="member_id", required=true)
    private Output<String> member_id;

    public Output<String> member_id() {
        return this.member_id;
    }

    @Import(name="project_id", required=true)
    private Output<String> project_id;

    public Output<String> project_id() {
        return this.project_id;
    }

    private ProjectMemberArgs() {}

    private ProjectMemberArgs(ProjectMemberArgs $) {
        this.member_id = $.member_id;
        this.project_id = $.project_id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectMemberArgs $;

        public Builder() {
            $ = new ProjectMemberArgs();
        }

        public Builder(ProjectMemberArgs defaults) {
            $ = new ProjectMemberArgs(Objects.requireNonNull(defaults));
        }

        public Builder member_id(Output<String> member_id) {
            $.member_id = member_id;
            return this;
        }

        public Builder member_id(String member_id) {
            return member_id(Output.of(member_id));
        }

        public Builder project_id(Output<String> project_id) {
            $.project_id = project_id;
            return this;
        }

        public Builder project_id(String project_id) {
            return project_id(Output.of(project_id));
        }

        public ProjectMemberArgs build() {
            if ($.member_id == null) {
                throw new MissingRequiredPropertyException("ProjectMemberArgs", "member_id");
            }
            if ($.project_id == null) {
                throw new MissingRequiredPropertyException("ProjectMemberArgs", "project_id");
            }
            return $;
        }
    }

}
