name: Make release
on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  release-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    env:
      PROVIDER_NAME: cloudbeaver

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Set version env var
        id: vars
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -C provider -o ../dist/pulumi-resource-${PROVIDER_NAME}${EXT}

      - name: Package binary
        run: |
          FILENAME="pulumi-resource-${PROVIDER_NAME}-v${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz"
          cd dist
          tar -czf $FILENAME pulumi-resource-${PROVIDER_NAME}*
          echo "ASSET=$FILENAME" >> $GITHUB_ENV

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/${{ env.ASSET }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
